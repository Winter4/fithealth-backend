import { Composer, Keyboard } from "grammy";
import type { CustomContext } from "@src/context";

export const sceneId = "MAIN_MENU";

// alias = value
enum mainMenuKeys {
  "–ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ" = "ü•¶ –ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ",
  "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" = "üóí –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
  "–°–ø—Ä–∞–≤–∫–∞" = "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞",
}
const mainMenuMarkup = {
  keys: mainMenuKeys,
  keyboard: new Keyboard()
    .text(mainMenuKeys["–ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ"])
    .row()
    .text(mainMenuKeys["–°–ø—Ä–∞–≤–∫–∞"])
    .text(mainMenuKeys["–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"])
    .row()
    .resized(),
};

// - - - - - - - //

export async function enter(ctx: CustomContext) {
  //await ctx.db.state.update({ where: {  }})
  return ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", { reply_markup: mainMenuMarkup.keyboard });
}

// - - - - - - - //

const mainMenu = new Composer<CustomContext>();

mainMenu.hears(mainMenuKeys["–ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ"], async (ctx: CustomContext) => {
  return ctx.reply("–í–∞—à–µ –ø–∏—Ç–∞–Ω–∏–µ");
});

mainMenu.hears(mainMenuKeys["–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"], async (ctx: CustomContext) => {
  return ctx.reply("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö");
});

mainMenu.hears(mainMenuKeys["–°–ø—Ä–∞–≤–∫–∞"], async (ctx: CustomContext) => {
  return ctx.reply("–°–ø—Ä–∞–≤–∫–∞");
});

export default mainMenu;
