import { Composer, Keyboard } from "grammy";
import type { CustomContext } from "@src/context";

export const sceneId = "EDIT_MENU";

// alias = value
enum editMenuKeys {
  "–ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ" = "ü•¶ –ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ",
  "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" = "üóí –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
  "–°–ø—Ä–∞–≤–∫–∞" = "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞",
}
const editMenuMarkup = {
  keys: editMenuKeys,
  keyboard: new Keyboard()
    .text(editMenuKeys["–ú–æ—ë –ø–∏—Ç–∞–Ω–∏–µ"])
    .row()
    .text(editMenuKeys["–°–ø—Ä–∞–≤–∫–∞"])
    .text(editMenuKeys["–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"])
    .row()
    .resized(),
};

// - - - - - - - //

export async function enter(ctx: CustomContext) {
  await ctx.cache.update(ctx.from!.id.toString(), { scene: sceneId });
  return ctx.reply("–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", {
    reply_markup: editMenuMarkup.keyboard,
  });
}

// - - - - - - - //

const editMenu = new Composer<CustomContext>();

export default editMenu;
