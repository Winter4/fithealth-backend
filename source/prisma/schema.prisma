generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DB_URL")
  provider = "postgresql"
}

enum Gender {
  M
  F
}

enum Activity {
  ZERO
  LOW
  MIDDLE
  HIGH
}

enum Target {
  LOSE
  KEEP
  GAIN
}

model User {
  id             Int       @id @default(autoincrement())
  tg_id          String    @unique
  uuid           String    @unique @default(uuid())
  sex            Gender?
  weight         Float?
  height         Int?
  age            Int?
  activity       Activity?
  target         Target?
  calories_limit Int?
  state          State?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  Report         Report[]
}

model State {
  user_tg_id String  @id
  user       User    @relation(fields: [user_tg_id], references: [tg_id])
  scene      String  @default("NONE")
  registered Boolean @default(false)
}

model Report {
  id             Int      @id @default(autoincrement())
  user_uuid      String
  user           User     @relation(fields: [user_uuid], references: [uuid])
  calories_limit Int
  date           DateTime
  Meal           Meal[]

  @@unique([user_uuid, date])
}

model Food {
  id       Int     @id @default(autoincrement())
  healthy  Boolean
  name     String
  calories Int
  proteins Int
  fats     Int
  carbs    Int
  Meal     Meal[]
}

enum Mealtime {
  BREAKFAST
  FLUNCH
  DINNER
  SLUNCH
  SUPPER
}

model Meal {
  id        Int      @id @default(autoincrement())
  weight    Int
  food_id   Int
  food      Food     @relation(fields: [food_id], references: [id])
  report_id Int
  report    Report   @relation(fields: [report_id], references: [id])
  mealtime  Mealtime
}
