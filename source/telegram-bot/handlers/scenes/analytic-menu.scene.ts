import { Composer, InputFile, Keyboard } from "grammy";
import type { CustomContext } from "@bot/types";
import { enter as enterMainMenu } from "./main-menu.scene";

import { backButton } from "./scene-tools";
import { getChartStream } from "./chart";

export const sceneId = "ANALYTIC_MENU";

// alias = value
enum editMenuKeys {
  "–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑" = "üê≠ –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑",
}
const markup = {
  keys: editMenuKeys,
  keyboard: new Keyboard()
    .text(editMenuKeys["–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑"])
    .row()
    .text(backButton)
    .row()
    .resized(),
};

// - - - - - - - //

export async function enter(ctx: CustomContext) {
  await ctx.cache.update(ctx.from!.id.toString(), { scene: sceneId });

  return ctx.reply(
    "üìä –ú–µ–Ω—é –∞–Ω–∞–ª–∏–∑–∞ –ø–∏—Ç–∞–Ω–∏—è \n\nüê≠ –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ - –ø—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞, –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π",
    {
      reply_markup: markup.keyboard,
    }
  );
}

// - - - - - - - //

const analyticMenu = new Composer<CustomContext>();

analyticMenu.hears(editMenuKeys["–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑"], async (ctx: CustomContext) => {
  /*
  const streams = await getChartStream();

  await ctx.replyWithPhoto(new InputFile(streams.followPercent), {
    caption: "üìä –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–æ—Ä–º–µ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤",
  });

  return ctx.replyWithPhoto(new InputFile(streams.followPercent), {
    caption: "üìä –ì—Ä–∞—Ñ–∏–∫ –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤",
  });
  */

  return ctx.reply("–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑");
});

analyticMenu.hears(backButton, (ctx: CustomContext) => enterMainMenu(ctx));

export default analyticMenu;
